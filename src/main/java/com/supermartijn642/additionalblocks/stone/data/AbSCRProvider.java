package com.supermartijn642.additionalblocks.stone.data;

import com.supermartijn642.additionalblocks.stone.AdditionalBlocks;
import net.minecraft.advancements.criterion.InventoryChangeTrigger;
import net.minecraft.block.Blocks;
import net.minecraft.data.IFinishedRecipe;
import net.minecraft.data.SingleItemRecipeBuilder;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;

import java.util.function.Consumer;
import java.util.function.Function;

public class AbSCRProvider {

    public static void stoneCuttingRecipes(Consumer<IFinishedRecipe> recipeConsumer, Function<IItemProvider, InventoryChangeTrigger.Instance> has) {
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.ANDESITE, Blocks.POLISHED_ANDESITE), AdditionalBlocks.polished_andesite_wall).addCriterion("has_item", has.apply(Blocks.ANDESITE)).build(recipeConsumer, "abstoneedition:polished_andesite_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.ANDESITE, Blocks.POLISHED_ANDESITE), AdditionalBlocks.andesite_bricks).addCriterion("has_item", has.apply(Blocks.ANDESITE)).build(recipeConsumer, "abstoneedition:andesite_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.ANDESITE, Blocks.POLISHED_ANDESITE, AdditionalBlocks.andesite_bricks), AdditionalBlocks.andesite_bricks_stairs).addCriterion("has_item", has.apply(Blocks.ANDESITE)).build(recipeConsumer, "abstoneedition:andesite_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.ANDESITE, Blocks.POLISHED_ANDESITE, AdditionalBlocks.andesite_bricks), AdditionalBlocks.andesite_bricks_wall).addCriterion("has_item", has.apply(Blocks.ANDESITE)).build(recipeConsumer, "abstoneedition:andesite_bricks_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.ANDESITE, Blocks.POLISHED_ANDESITE, AdditionalBlocks.andesite_bricks), AdditionalBlocks.andesite_bricks_slab, 2).addCriterion("has_item", has.apply(Blocks.ANDESITE)).build(recipeConsumer, "abstoneedition:andesite_bricks_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.asphalt), AdditionalBlocks.asphalt_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.asphalt)).build(recipeConsumer, "abstoneedition:asphalt_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.asphalt), AdditionalBlocks.asphalt_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.asphalt)).build(recipeConsumer, "abstoneedition:asphalt_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble), AdditionalBlocks.black_marble_bricks).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble), AdditionalBlocks.black_marble_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble), AdditionalBlocks.black_marble_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble), AdditionalBlocks.black_marble_wall).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble, AdditionalBlocks.black_marble_bricks), AdditionalBlocks.black_marble_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble, AdditionalBlocks.black_marble_bricks), AdditionalBlocks.black_marble_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.black_marble, AdditionalBlocks.black_marble_bricks), AdditionalBlocks.black_marble_bricks_wall).addCriterion("has_item", has.apply(AdditionalBlocks.black_marble)).build(recipeConsumer, "abstoneedition:black_marble_bricks_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone), AdditionalBlocks.bloodstone_bricks).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone), AdditionalBlocks.bloodstone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone), AdditionalBlocks.bloodstone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone), AdditionalBlocks.bloodstone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone, AdditionalBlocks.bloodstone_bricks), AdditionalBlocks.bloodstone_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone, AdditionalBlocks.bloodstone_bricks), AdditionalBlocks.bloodstone_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.bloodstone, AdditionalBlocks.bloodstone_bricks), AdditionalBlocks.bloodstone_bricks_wall).addCriterion("has_item", has.apply(AdditionalBlocks.bloodstone)).build(recipeConsumer, "abstoneedition:bloodstone_bricks_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_bricks), AdditionalBlocks.brown_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.brown_bricks)).build(recipeConsumer, "abstoneedition:brown_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_bricks), AdditionalBlocks.brown_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.brown_bricks)).build(recipeConsumer, "abstoneedition:brown_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_path_curved), AdditionalBlocks.brown_stone_path_curved_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_path_curved)).build(recipeConsumer, "abstoneedition:brown_stone_path_curved_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_path_curved), AdditionalBlocks.brown_stone_path_curved_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_path_curved)).build(recipeConsumer, "abstoneedition:brown_stone_path_curved_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_path_straight), AdditionalBlocks.brown_stone_path_straight_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_path_straight)).build(recipeConsumer, "abstoneedition:brown_stone_path_straight_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_path_straight), AdditionalBlocks.brown_stone_path_straight_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_path_straight)).build(recipeConsumer, "abstoneedition:brown_stone_path_straight_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_pattern), AdditionalBlocks.brown_stone_pattern_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_pattern)).build(recipeConsumer, "abstoneedition:brown_stone_pattern_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_pattern), AdditionalBlocks.brown_stone_pattern_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_pattern)).build(recipeConsumer, "abstoneedition:brown_stone_pattern_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_tiles), AdditionalBlocks.brown_stone_tiles_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_tiles)).build(recipeConsumer, "abstoneedition:brown_stone_tiles_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.brown_stone_tiles), AdditionalBlocks.brown_stone_tiles_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.brown_stone_tiles)).build(recipeConsumer, "abstoneedition:brown_stone_tiles_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_path_curved), AdditionalBlocks.old_stone_path_curved_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_path_curved)).build(recipeConsumer, "abstoneedition:old_stone_path_curved_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_path_curved), AdditionalBlocks.old_stone_path_curved_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_path_curved)).build(recipeConsumer, "abstoneedition:old_stone_path_curved_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_path_straight), AdditionalBlocks.old_stone_path_straight_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_path_straight)).build(recipeConsumer, "abstoneedition:old_stone_path_straight_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_path_straight), AdditionalBlocks.old_stone_path_straight_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_path_straight)).build(recipeConsumer, "abstoneedition:old_stone_path_straight_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_pattern), AdditionalBlocks.old_stone_pattern_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_pattern)).build(recipeConsumer, "abstoneedition:old_stone_pattern_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_pattern), AdditionalBlocks.old_stone_pattern_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_pattern)).build(recipeConsumer, "abstoneedition:old_stone_pattern_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_tiles), AdditionalBlocks.old_stone_tiles_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_tiles)).build(recipeConsumer, "abstoneedition:old_stone_tiles_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.old_stone_tiles), AdditionalBlocks.old_stone_tiles_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.old_stone_tiles)).build(recipeConsumer, "abstoneedition:old_stone_tiles_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_path_curved), AdditionalBlocks.stone_path_curved_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.stone_path_curved)).build(recipeConsumer, "abstoneedition:stone_path_curved_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_path_curved), AdditionalBlocks.stone_path_curved_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.stone_path_curved)).build(recipeConsumer, "abstoneedition:stone_path_curved_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_path_straight), AdditionalBlocks.stone_path_straight_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.stone_path_straight)).build(recipeConsumer, "abstoneedition:stone_path_straight_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_path_straight), AdditionalBlocks.stone_path_straight_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.stone_path_straight)).build(recipeConsumer, "abstoneedition:stone_path_straight_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_pattern), AdditionalBlocks.stone_pattern_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.stone_pattern)).build(recipeConsumer, "abstoneedition:stone_pattern_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_pattern), AdditionalBlocks.stone_pattern_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.stone_pattern)).build(recipeConsumer, "abstoneedition:stone_pattern_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_tiles), AdditionalBlocks.stone_tiles_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.stone_tiles)).build(recipeConsumer, "abstoneedition:stone_tiles_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_tiles), AdditionalBlocks.stone_tiles_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.stone_tiles)).build(recipeConsumer, "abstoneedition:stone_tiles_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.charred_planks), AdditionalBlocks.charred_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.charred_planks)).build(recipeConsumer, "abstoneedition:charred_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.charred_planks), AdditionalBlocks.charred_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.charred_planks)).build(recipeConsumer, "abstoneedition:charred_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.DIORITE, Blocks.POLISHED_DIORITE), AdditionalBlocks.polished_diorite_wall).addCriterion("has_item", has.apply(Blocks.DIORITE)).build(recipeConsumer, "abstoneedition:polished_diorite_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.DIORITE, Blocks.POLISHED_DIORITE), AdditionalBlocks.diorite_bricks).addCriterion("has_item", has.apply(Blocks.DIORITE)).build(recipeConsumer, "abstoneedition:diorite_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.DIORITE, Blocks.POLISHED_DIORITE, AdditionalBlocks.diorite_bricks), AdditionalBlocks.diorite_bricks_stairs).addCriterion("has_item", has.apply(Blocks.DIORITE)).build(recipeConsumer, "abstoneedition:diorite_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.DIORITE, Blocks.POLISHED_DIORITE, AdditionalBlocks.diorite_bricks), AdditionalBlocks.diorite_bricks_wall).addCriterion("has_item", has.apply(Blocks.DIORITE)).build(recipeConsumer, "abstoneedition:diorite_bricks_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.DIORITE, Blocks.POLISHED_DIORITE, AdditionalBlocks.diorite_bricks), AdditionalBlocks.diorite_bricks_slab, 2).addCriterion("has_item", has.apply(Blocks.DIORITE)).build(recipeConsumer, "abstoneedition:diorite_bricks_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE), AdditionalBlocks.glowstone_stairs).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE), AdditionalBlocks.glowstone_slab, 2).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE), AdditionalBlocks.glowstone_wall).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE), AdditionalBlocks.glowstone_bricks).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE, AdditionalBlocks.glowstone_bricks), AdditionalBlocks.glowstone_bricks_stairs).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE, AdditionalBlocks.glowstone_bricks), AdditionalBlocks.glowstone_bricks_slab, 2).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GLOWSTONE, AdditionalBlocks.glowstone_bricks), AdditionalBlocks.glowstone_bricks_wall).addCriterion("has_item", has.apply(Blocks.GLOWSTONE)).build(recipeConsumer, "abstoneedition:glowstone_bricks_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GRANITE, Blocks.POLISHED_GRANITE), AdditionalBlocks.polished_granite_wall).addCriterion("has_item", has.apply(Blocks.GRANITE)).build(recipeConsumer, "abstoneedition:polished_granite_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GRANITE, Blocks.POLISHED_GRANITE), AdditionalBlocks.granite_bricks).addCriterion("has_item", has.apply(Blocks.GRANITE)).build(recipeConsumer, "abstoneedition:granite_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GRANITE, Blocks.POLISHED_GRANITE, AdditionalBlocks.granite_bricks), AdditionalBlocks.granite_bricks_stairs).addCriterion("has_item", has.apply(Blocks.GRANITE)).build(recipeConsumer, "abstoneedition:granite_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GRANITE, Blocks.POLISHED_GRANITE, AdditionalBlocks.granite_bricks), AdditionalBlocks.granite_bricks_wall).addCriterion("has_item", has.apply(Blocks.GRANITE)).build(recipeConsumer, "abstoneedition:granite_bricks_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.GRANITE, Blocks.POLISHED_GRANITE, AdditionalBlocks.granite_bricks), AdditionalBlocks.granite_bricks_slab, 2).addCriterion("has_item", has.apply(Blocks.GRANITE)).build(recipeConsumer, "abstoneedition:granite_bricks_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.gray_bricks), AdditionalBlocks.gray_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.gray_bricks)).build(recipeConsumer, "abstoneedition:gray_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.gray_bricks), AdditionalBlocks.gray_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.gray_bricks)).build(recipeConsumer, "abstoneedition:gray_bricks_slab_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone), AdditionalBlocks.limestone_bricks).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone), AdditionalBlocks.limestone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone), AdditionalBlocks.limestone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone), AdditionalBlocks.limestone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone, AdditionalBlocks.limestone_bricks), AdditionalBlocks.limestone_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone, AdditionalBlocks.limestone_bricks), AdditionalBlocks.limestone_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.limestone, AdditionalBlocks.limestone_bricks), AdditionalBlocks.limestone_bricks_wall).addCriterion("has_item", has.apply(AdditionalBlocks.limestone)).build(recipeConsumer, "abstoneedition:limestone_bricks_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble), AdditionalBlocks.marble_bricks).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble), AdditionalBlocks.marble_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble), AdditionalBlocks.marble_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble), AdditionalBlocks.marble_wall).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble, AdditionalBlocks.marble_bricks), AdditionalBlocks.marble_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble, AdditionalBlocks.marble_bricks), AdditionalBlocks.marble_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble, AdditionalBlocks.marble_bricks), AdditionalBlocks.marble_bricks_wall).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_bricks_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.marble), AdditionalBlocks.marble_pillar).addCriterion("has_item", has.apply(AdditionalBlocks.marble)).build(recipeConsumer, "abstoneedition:marble_pillar_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_black_marble), AdditionalBlocks.smooth_black_marble_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_black_marble)).build(recipeConsumer, "abstoneedition:smooth_black_marble_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_black_marble), AdditionalBlocks.smooth_black_marble_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_black_marble)).build(recipeConsumer, "abstoneedition:smooth_black_marble_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_black_marble), AdditionalBlocks.smooth_black_marble_wall).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_black_marble)).build(recipeConsumer, "abstoneedition:smooth_black_marble_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_bloodstone), AdditionalBlocks.smooth_bloodstone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_bloodstone)).build(recipeConsumer, "abstoneedition:smooth_bloodstone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_bloodstone), AdditionalBlocks.smooth_bloodstone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_bloodstone)).build(recipeConsumer, "abstoneedition:smooth_bloodstone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_bloodstone), AdditionalBlocks.smooth_bloodstone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_bloodstone)).build(recipeConsumer, "abstoneedition:smooth_bloodstone_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_limestone), AdditionalBlocks.smooth_limestone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_limestone)).build(recipeConsumer, "abstoneedition:smooth_limestone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_limestone), AdditionalBlocks.smooth_limestone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_limestone)).build(recipeConsumer, "abstoneedition:smooth_limestone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_limestone), AdditionalBlocks.smooth_limestone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_limestone)).build(recipeConsumer, "abstoneedition:smooth_limestone_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_glowstone), AdditionalBlocks.smooth_glowstone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_glowstone)).build(recipeConsumer, "abstoneedition:smooth_glowstone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_glowstone), AdditionalBlocks.smooth_glowstone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_glowstone)).build(recipeConsumer, "abstoneedition:smooth_glowstone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_glowstone), AdditionalBlocks.smooth_glowstone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_glowstone)).build(recipeConsumer, "abstoneedition:smooth_glowstone_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_marble), AdditionalBlocks.smooth_marble_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_marble)).build(recipeConsumer, "abstoneedition:smooth_marble_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_marble), AdditionalBlocks.smooth_marble_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_marble)).build(recipeConsumer, "abstoneedition:smooth_marble_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_marble), AdditionalBlocks.smooth_marble_wall).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_marble)).build(recipeConsumer, "abstoneedition:smooth_marble_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_smooth_stone), AdditionalBlocks.smooth_smooth_stone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_smooth_stone)).build(recipeConsumer, "abstoneedition:smooth_smooth_stone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_smooth_stone), AdditionalBlocks.smooth_smooth_stone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_smooth_stone)).build(recipeConsumer, "abstoneedition:smooth_smooth_stone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.smooth_smooth_stone), AdditionalBlocks.smooth_smooth_stone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.smooth_smooth_stone)).build(recipeConsumer, "abstoneedition:smooth_smooth_stone_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.SMOOTH_STONE), AdditionalBlocks.smooth_stone_stairs).addCriterion("has_item", has.apply(Blocks.SMOOTH_STONE)).build(recipeConsumer, "abstoneedition:smooth_stone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.SMOOTH_STONE), AdditionalBlocks.smooth_stone_wall).addCriterion("has_item", has.apply(Blocks.SMOOTH_STONE)).build(recipeConsumer, "abstoneedition:smooth_stone_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.SMOOTH_STONE), AdditionalBlocks.smooth_stone_bricks).addCriterion("has_item", has.apply(Blocks.SMOOTH_STONE)).build(recipeConsumer, "abstoneedition:smooth_stone_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.SMOOTH_STONE, AdditionalBlocks.smooth_stone_bricks), AdditionalBlocks.smooth_stone_bricks_stairs).addCriterion("has_item", has.apply(Blocks.SMOOTH_STONE)).build(recipeConsumer, "abstoneedition:smooth_stone_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.SMOOTH_STONE, AdditionalBlocks.smooth_stone_bricks), AdditionalBlocks.smooth_stone_bricks_slab, 2).addCriterion("has_item", has.apply(Blocks.SMOOTH_STONE)).build(recipeConsumer, "abstoneedition:smooth_stone_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.SMOOTH_STONE, AdditionalBlocks.smooth_stone_bricks), AdditionalBlocks.smooth_stone_bricks_wall).addCriterion("has_item", has.apply(Blocks.SMOOTH_STONE)).build(recipeConsumer, "abstoneedition:smooth_stone_bricks_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.STONE), AdditionalBlocks.stone_wall).addCriterion("has_item", has.apply(Blocks.STONE)).build(recipeConsumer, "abstoneedition:stone_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.STONE), AdditionalBlocks.stone_brick_block).addCriterion("has_item", has.apply(Blocks.STONE)).build(recipeConsumer, "abstoneedition:stone_brick_block_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_brick_block, Blocks.STONE), AdditionalBlocks.stone_brick_block_slab, 2).addCriterion("has_item", has.apply(Blocks.STONE)).build(recipeConsumer, "abstoneedition:stone_brick_block_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_brick_block, Blocks.STONE), AdditionalBlocks.stone_brick_block_stairs).addCriterion("has_item", has.apply(Blocks.STONE)).build(recipeConsumer, "abstoneedition:stone_brick_block_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.stone_brick_block, Blocks.STONE), AdditionalBlocks.stone_brick_block_wall).addCriterion("has_item", has.apply(Blocks.STONE)).build(recipeConsumer, "abstoneedition:stone_brick_block_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone), AdditionalBlocks.volcanic_stone_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone), AdditionalBlocks.volcanic_stone_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone), AdditionalBlocks.volcanic_stone_wall).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone), AdditionalBlocks.volcanic_stone_bricks).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone, AdditionalBlocks.volcanic_stone_bricks), AdditionalBlocks.volcanic_stone_bricks_stairs).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone, AdditionalBlocks.volcanic_stone_bricks), AdditionalBlocks.volcanic_stone_bricks_slab, 2).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(AdditionalBlocks.volcanic_stone, AdditionalBlocks.volcanic_stone_bricks), AdditionalBlocks.volcanic_stone_bricks_wall).addCriterion("has_item", has.apply(AdditionalBlocks.volcanic_stone)).build(recipeConsumer, "abstoneedition:volcanic_stone_bricks_wall_stonecutting");

        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN), AdditionalBlocks.obsidian_stairs).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN), AdditionalBlocks.obsidian_slab, 2).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN), AdditionalBlocks.obsidian_wall).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_wall_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN), AdditionalBlocks.obsidian_bricks).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_bricks_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN, AdditionalBlocks.obsidian_bricks), AdditionalBlocks.obsidian_bricks_stairs).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_bricks_stairs_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN, AdditionalBlocks.obsidian_bricks), AdditionalBlocks.obsidian_bricks_slab, 2).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_bricks_slab_stonecutting");
        SingleItemRecipeBuilder.stonecuttingRecipe(Ingredient.fromItems(Blocks.OBSIDIAN, AdditionalBlocks.obsidian_bricks), AdditionalBlocks.obsidian_bricks_wall).addCriterion("has_item", has.apply(Blocks.OBSIDIAN)).build(recipeConsumer, "abstoneedition:obsidian_bricks_wall_stonecutting");
    }
}
